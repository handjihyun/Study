# ======================================================================================
# shiny package
install.packages("shiny")
library(shiny)
# ---------------------------------------------------------
# UI 처리 기능 함수
ui <- fluidPage(
tableOutput('static')
dataTableOutput("dynamic") # 동적 테이블
# UI 출력 내용 생성 함수
server <- function(input, output, session){
output$static <- renderTable(head(mtcars))
output$dynamic <- renderDataTable(mtcars, options = list(pageLength = 5))
}
shinyApp(ui = ui, server = server)
runApp()
# ======================================================================================
# Web - app programming
#   - Front - End (UI) + Back - End (Server)
#   - app 실행 코드
# ======================================================================================
# Front-End(UI) 처리 함수 구현 --------------------------------
# 웹 페이지 구성 => 입력 & 출력 요소
# ======================================================================================
ui <- fluidPage(
# 화면에 글자 보여주는 UI Widget
# 함수의 첫번째 매개변수는 output 객체의 속성, id
textOutput('msg'),
textOutput('value'),
verbatimTextOutput('code'),
imageOutput('img1')
)
# ---------------------------------------------------------
# UI 처리 기능 함수
ui <- fluidPage(
plotOutput("plot1", width = '400px')
)
# UI 출력 내용 생성 함수
server <- function(input, output, session){
output$plot1 = renderPlot(
{
cars2 <- cars + rnorm(nrow(cars))
plot(cars2, col = 'blue', pch = 20)
}
)
}
runApp()
